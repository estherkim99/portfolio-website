# Generated by Django 3.1.1 on 2020-09-27 13:44

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicProject',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('team_size', models.IntegerField(default=1)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('project_url', models.TextField(blank=True, null=True)),
                ('source_url', models.TextField(blank=True, null=True)),
                ('extra', models.JSONField(blank=True, null=True)),
            ],
            options={
                'db_table': 'academic_projects',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('course_code', models.CharField(max_length=30)),
                ('subject', models.CharField(blank=True, choices=[('Computer Science', 'Computer Science'), ('Engineering', 'Engineering'), ('Mathematics', 'Mathematics'), ('Applied Mathematics', 'Applied Mathematics'), ('Others', 'Others')], max_length=255, null=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('TA', models.BooleanField(default=False)),
                ('professor_info', models.JSONField(blank=True, null=True)),
                ('semester_level', models.IntegerField(blank=True, choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9)], null=True)),
            ],
            options={
                'db_table': 'courses',
            },
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'keywords',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('city', models.CharField(max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(max_length=255, null=True)),
                ('online', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'locations',
            },
        ),
        migrations.CreateModel(
            name='StackCategory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'stack_categories',
            },
        ),
        migrations.CreateModel(
            name='TechStack',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('proficiency', models.CharField(blank=True, choices=[('basic', 'Basic'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], max_length=255, null=True)),
                ('category', models.ManyToManyField(blank=True, to='contents.StackCategory')),
            ],
            options={
                'db_table': 'technology_stacks',
            },
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('role', models.CharField(max_length=255)),
                ('role_description', models.TextField(null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(null=True)),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='contents.location')),
                ('stack', models.ManyToManyField(blank=True, to='contents.TechStack')),
            ],
            options={
                'db_table': 'works',
            },
        ),
        migrations.CreateModel(
            name='WorkProject',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('team_size', models.IntegerField(default=1)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('project_url', models.TextField(blank=True, null=True)),
                ('source_url', models.TextField(blank=True, null=True)),
                ('extra', models.JSONField(blank=True, null=True)),
                ('keywords', models.ManyToManyField(blank=True, to='contents.Keyword')),
                ('location', models.ManyToManyField(blank=True, to='contents.Location')),
                ('stack', models.ManyToManyField(blank=True, to='contents.TechStack')),
                ('work', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='contents.work')),
            ],
            options={
                'db_table': 'work_projects',
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('level', models.CharField(choices=[('Primary', 'Primary'), ('Secondary', 'Secondary'), ('Postsecondary', 'Postsecondary')], default='Postsecondary', max_length=20)),
                ('degree_type', models.CharField(blank=True, choices=[('High School', 'High School'), ("Bachelor's Degree", 'Bachelors')], default="Bachelor's Degree", max_length=30, null=True)),
                ('program_one', models.CharField(blank=True, max_length=255, null=True)),
                ('program_two', models.CharField(blank=True, max_length=255, null=True)),
                ('program_three', models.CharField(blank=True, max_length=255, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Attending', 'Attending'), ('Completed', 'Completed'), ('Break', 'Break'), ('Dropped', 'Dropped')], default='Attending', max_length=20)),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='contents.location')),
            ],
            options={
                'db_table': 'schools',
            },
        ),
        migrations.CreateModel(
            name='PersonalProject',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('team_size', models.IntegerField(default=1)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('project_url', models.TextField(blank=True, null=True)),
                ('source_url', models.TextField(blank=True, null=True)),
                ('extra', models.JSONField(blank=True, null=True)),
                ('keywords', models.ManyToManyField(blank=True, to='contents.Keyword')),
                ('location', models.ManyToManyField(blank=True, to='contents.Location')),
                ('stack', models.ManyToManyField(blank=True, to='contents.TechStack')),
            ],
            options={
                'db_table': 'personal_projects',
            },
        ),
        migrations.AddConstraint(
            model_name='location',
            constraint=models.UniqueConstraint(fields=('city', 'state', 'country', 'online'), name='unique_location'),
        ),
        migrations.AddField(
            model_name='course',
            name='keywords',
            field=models.ManyToManyField(blank=True, to='contents.Keyword'),
        ),
        migrations.AddField(
            model_name='course',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='contents.school'),
        ),
        migrations.AddField(
            model_name='academicproject',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='contents.course'),
        ),
        migrations.AddField(
            model_name='academicproject',
            name='keywords',
            field=models.ManyToManyField(blank=True, to='contents.Keyword'),
        ),
        migrations.AddField(
            model_name='academicproject',
            name='location',
            field=models.ManyToManyField(blank=True, to='contents.Location'),
        ),
        migrations.AddField(
            model_name='academicproject',
            name='stack',
            field=models.ManyToManyField(blank=True, to='contents.TechStack'),
        ),
        migrations.AddConstraint(
            model_name='work',
            constraint=models.UniqueConstraint(fields=('name', 'role'), name='unique_work'),
        ),
        migrations.AddConstraint(
            model_name='course',
            constraint=models.UniqueConstraint(fields=('course_code', 'school'), name='unique_course'),
        ),
    ]
